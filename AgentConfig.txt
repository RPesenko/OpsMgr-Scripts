<#  Add MG remotely #>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

$RemoteComputer = "SC19DC1.p469.local"
$AddNewMG = "Foo"
$AddNewMS = "FooMS.Foodom.local"

# Connect to remote computer
Try {
    Write-Host "Connecting to " $RemoteComputer -ForegroundColor Green
    Invoke-Command -ComputerName $RemoteComputer -ArgumentList $AddNewMG,$AddNewMS -ErrorAction Stop -ScriptBlock { 
        $NewMG = $args[0]
        $NewMS = $args[1]
        Try {
            Write-Host "Success. Finding existing SCOM Management Groups" -ForegroundColor Green
            $objAgent = New-Object -ComObject AgentConfigManager.MgmtSvcCfg -ErrorAction Stop
        }
        Catch {
            Write-Host "Enumeration Failure: " ($_.Exception).Message -ForegroundColor Red
        }

# Get list of SCOM Management Groups (will be empty if only OMS agent)
        $MGList = $objAgent.GetManagementGroups() 
        $MGFlag = 0

        foreach($FoundMG in $MGList) {
            If ($FoundMG.managementGroupName -eq $NewMG) {
                $MGFlag = 1
            }
        }

        If ($MGFlag -eq 1) {
            Write-Host "  Agent is already configured for" $NewMG -ForegroundColor Green
        }
        Else {
            Write-Host "  Adding MG to agent configuration:" -ForegroundColor Yellow
            Try {
                $objAgent.AddManagementGroup($NewMG, $NewMS, 5723)
                Write-Host "Success. " -ForegroundColor Green
                #$objAgent.ReloadConfiguration()
                $objAgent.GetManagementGroups() |Select ManagementGroupName, ManagementServer |FT
            }
            Catch {
                Write-Host "Configuration Failure: " ($_.Exception).Message -ForegroundColor Red
            }
        }
    }
}
Catch {
    Write-Host "Connection Failure: " ($_.Exception).TransportMessage -ForegroundColor Red
}



<#  Delete MG remotely #>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

$RemoteComputer = "SC19DC1.p469.local"
$deleteMG = "FooGrup"

# Connect to remote computer
Try {
    Write-Host "Connecting to " $RemoteComputer -ForegroundColor Green
    Invoke-Command -ComputerName $RemoteComputer -ArgumentList $deleteMG -ErrorAction Stop -ScriptBlock { 
        $DelMG = $args[0]
        Try {
            Write-Host "Success. Finding existing SCOM Management Groups" -ForegroundColor Green
            $objAgent = New-Object -ComObject AgentConfigManager.MgmtSvcCfg -ErrorAction Stop
        }
        Catch {
            Write-Host "Enumeration Failure: " ($_.Exception).Message -ForegroundColor Red
        }

# Get list of SCOM Management Groups (will be empty if only OMS agent)
        $MGList = $objAgent.GetManagementGroups() 
        $MGFlag = 0

        foreach($FoundMG in $MGList) {
            If ($FoundMG.managementGroupName -eq $DelMG) {
                $MGFlag = 1
            }
        }

        If ($MGFlag -eq 0) {
            Write-Host "  Agent is not configured for" $DelMG -ForegroundColor Green
        }
        Else {
            Write-Host "  Deleting MG from agent configuration:" -ForegroundColor Yellow
            Try {
                $objAgent.RemoveManagementGroup($DelMG)
                Write-Host "Success. " -ForegroundColor Green
                #$objAgent.ReloadConfiguration()
                $objAgent.GetManagementGroups() |Select ManagementGroupName, ManagementServer |FT
            }
            Catch {
                Write-Host "Configuration Failure: " ($_.Exception).Message -ForegroundColor Red
            }
        }
    }
}
Catch {
    Write-Host "Connection Failure: " ($_.Exception).TransportMessage -ForegroundColor Red
}




<#  List MG remotely #>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

$RemoteComputer = "SC19vm1.p469.local"

# Connect to remote computer
Try {
    Write-Host "Connecting to " $RemoteComputer -ForegroundColor Green
    Invoke-Command -ComputerName $RemoteComputer -ErrorAction Stop -ScriptBlock { 
        Try {
            Write-Host "Success. Finding existing SCOM Management Groups" -ForegroundColor Green
            $objAgent = New-Object -ComObject AgentConfigManager.MgmtSvcCfg -ErrorAction Stop
        }
        Catch {
            Write-Host "Enumeration Failure: " ($_.Exception).Message -ForegroundColor Red
        }

# Get list of SCOM Management Groups (will be empty if only OMS agent)
        $MGList = $objAgent.GetManagementGroups() 
        $MGList |Select ManagementGroupName, ManagementServer |FT
    }
}
Catch {
    Write-Host "Connection Failure: " ($_.Exception).TransportMessage -ForegroundColor Red
}




